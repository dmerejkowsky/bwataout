#!/usr/bin/env python3

FIFO_PATH = "/tmp/kak-refresh"

import argparse
import os
import shutil
import subprocess
import sys

from pathlib import Path


def print_sep():
    term_size = shutil.get_terminal_size()
    print("-" * term_size.columns)


def sanitize_url(url):
    as_path = Path(url)
    if as_path.exists():
        url = "file://" + as_path.resolve()
    return url


def loop(*, url, cmd, browser=None):
    # Run `cmd` once so that we don't start
    # the loop on some failing command ...
    subprocess.run(cmd, shell=True)
    print_sep()

    driver = None
    if url:
        from selenium import webdriver

        if browser == "chrome":
            driver = webdriver.Chrome()
        else:
            driver = webdriver.Firefox()
        driver.get(sanitize_url(url))

    stream = open(FIFO_PATH)
    while True:
        message = stream.readline()
        if message == "quit\n":
            stream.close()
            return
        if message == "run\n":
            print(cmd)
            process = subprocess.run(cmd, shell=True)
            if process.returncode != 0:
                print("Process failed")
            if driver:
                driver.refresh()
            print_sep()


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("--browser", choices=["chrome", "firefox"])
    parser.add_argument("--cmd", required=True)
    parser.add_argument("--url")
    args = parser.parse_args()
    cmd = args.cmd
    url = args.url
    browser = args.browser
    if browser and not url:
        sys.exit("--browser used but no url set")
    if os.path.exists(FIFO_PATH):
        os.remove(FIFO_PATH)
    os.mkfifo(FIFO_PATH)

    try:
        loop(url=url, cmd=cmd, browser=browser)
    except KeyboardInterrupt:
        sys.exit()


if __name__ == "__main__":
    main()

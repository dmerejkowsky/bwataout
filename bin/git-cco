#!/usr/bin/env python3

import argparse
import subprocess
import sys

""" Git checkout on steroids.

git-cco branch will:
    * create the branch if it does not exis, and thet
    * make sure it tracks <origin>/<branch>

"""

def run_git(*args):
    cmd = ["git"] + list(args)
    rc = subprocess.call(cmd)
    if rc != 0:
        sys.exit(rc)

def checkout_and_track(branch, remote="origin"):
    run_git("checkout", "-B", branch, "--quiet")
    remote_ref = "%s/%s" % (remote, branch)
    run_git("branch", "--set-upstream-to", remote_ref)

def reset_to_upstearm():
    run_git("reset", "--hard", "@{u}")

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("branch")
    parser.add_argument("-o", "--origin", dest="remote")
    parser.set_defaults(remote="origin")
    args = parser.parse_args()
    branch = args.branch
    remote = args.remote
    checkout_and_track(branch, remote=remote)
    reset_to_upstearm()

if __name__ == "__main__":
    main()
